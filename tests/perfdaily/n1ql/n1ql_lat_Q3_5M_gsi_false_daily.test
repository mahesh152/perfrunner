[test_case]
test = perfdaily.master.n1ql.N1QLLatencyTestDaily
title = Q3, Range Scan, latency, 5M docs, GSI, request_plus
summary = Range Scan, 14.4KGops, 3.6KSops, 200Qops
larger_is_better = false

[stats]
lat_interval = 0

[cluster]
mem_quota = 20480
index_mem_quota = 100000
initial_nodes = 6
num_buckets = 1

[secondary]
indexer.settings.storage_mode = forestdb
indexer.settings.compaction.min_size = 1048576
indexer.settings.persisted_snapshot.interval = 3000
indexer.settings.wal_size = 40960
indexer.settings.maxVbQueueLength = 10000
indexer.settings.max_cpu_percent = 2400
indexer.settings.scan_timeout = 0
indexer.settings.gc_percent = 200

[load]
items = 5000000
size = 1024
workers = 80
doc_gen = reverse_lookup
doc_partitions = 1

[n1ql]
indexes =
    by_capped_small::CREATE INDEX {name} ON `{bucket}` (capped_small) using gsi;

[access]
creates = 0
reads = 80
updates = 20
deletes = 0
throughput = 18000
items = 5000000
workers = 20
time = 300
n1ql_queries = range-scan
n1ql_throughput = 200
n1ql_workers = 50

[n1ql-range-scan]
prepared = range_scan
statement = SELECT name AS _name, street AS _street FROM `bucket-1` WHERE capped_small=$1;
scan_consistency = request_plus
args = ["{capped_small}"]

[dailyp]
dailyp_category = n1ql
dailyp_subcategory = FDB
threshold = 20